/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationUpdateDiscordRequest
 */
export interface NotificationUpdateDiscordRequest {
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateDiscordRequest
     */
    appBuildError?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateDiscordRequest
     */
    databaseBackup?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateDiscordRequest
     */
    dokployRestart?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateDiscordRequest
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateDiscordRequest
     */
    appDeploy?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateDiscordRequest
     */
    dockerCleanup?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateDiscordRequest
     */
    serverThreshold?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateDiscordRequest
     */
    webhookUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateDiscordRequest
     */
    decoration?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateDiscordRequest
     */
    notificationId: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateDiscordRequest
     */
    discordId: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateDiscordRequest
     */
    organizationId?: string;
}

/**
 * Check if a given object implements the NotificationUpdateDiscordRequest interface.
 */
export function instanceOfNotificationUpdateDiscordRequest(value: object): value is NotificationUpdateDiscordRequest {
    if (!('notificationId' in value) || value['notificationId'] === undefined) return false;
    if (!('discordId' in value) || value['discordId'] === undefined) return false;
    return true;
}

export function NotificationUpdateDiscordRequestFromJSON(json: any): NotificationUpdateDiscordRequest {
    return NotificationUpdateDiscordRequestFromJSONTyped(json, false);
}

export function NotificationUpdateDiscordRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationUpdateDiscordRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'appBuildError': json['appBuildError'] == null ? undefined : json['appBuildError'],
        'databaseBackup': json['databaseBackup'] == null ? undefined : json['databaseBackup'],
        'dokployRestart': json['dokployRestart'] == null ? undefined : json['dokployRestart'],
        'name': json['name'] == null ? undefined : json['name'],
        'appDeploy': json['appDeploy'] == null ? undefined : json['appDeploy'],
        'dockerCleanup': json['dockerCleanup'] == null ? undefined : json['dockerCleanup'],
        'serverThreshold': json['serverThreshold'] == null ? undefined : json['serverThreshold'],
        'webhookUrl': json['webhookUrl'] == null ? undefined : json['webhookUrl'],
        'decoration': json['decoration'] == null ? undefined : json['decoration'],
        'notificationId': json['notificationId'],
        'discordId': json['discordId'],
        'organizationId': json['organizationId'] == null ? undefined : json['organizationId'],
    };
}

export function NotificationUpdateDiscordRequestToJSON(json: any): NotificationUpdateDiscordRequest {
    return NotificationUpdateDiscordRequestToJSONTyped(json, false);
}

export function NotificationUpdateDiscordRequestToJSONTyped(value?: NotificationUpdateDiscordRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'appBuildError': value['appBuildError'],
        'databaseBackup': value['databaseBackup'],
        'dokployRestart': value['dokployRestart'],
        'name': value['name'],
        'appDeploy': value['appDeploy'],
        'dockerCleanup': value['dockerCleanup'],
        'serverThreshold': value['serverThreshold'],
        'webhookUrl': value['webhookUrl'],
        'decoration': value['decoration'],
        'notificationId': value['notificationId'],
        'discordId': value['discordId'],
        'organizationId': value['organizationId'],
    };
}

