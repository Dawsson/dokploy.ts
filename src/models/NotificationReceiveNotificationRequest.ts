/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationReceiveNotificationRequest
 */
export interface NotificationReceiveNotificationRequest {
    /**
     * 
     * @type {string}
     * @memberof NotificationReceiveNotificationRequest
     */
    serverType?: NotificationReceiveNotificationRequestServerTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof NotificationReceiveNotificationRequest
     */
    type: NotificationReceiveNotificationRequestTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof NotificationReceiveNotificationRequest
     */
    value: number;
    /**
     * 
     * @type {number}
     * @memberof NotificationReceiveNotificationRequest
     */
    threshold: number;
    /**
     * 
     * @type {string}
     * @memberof NotificationReceiveNotificationRequest
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationReceiveNotificationRequest
     */
    timestamp: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationReceiveNotificationRequest
     */
    token: string;
}


/**
 * @export
 */
export const NotificationReceiveNotificationRequestServerTypeEnum = {
    Dokploy: 'Dokploy',
    Remote: 'Remote'
} as const;
export type NotificationReceiveNotificationRequestServerTypeEnum = typeof NotificationReceiveNotificationRequestServerTypeEnum[keyof typeof NotificationReceiveNotificationRequestServerTypeEnum];

/**
 * @export
 */
export const NotificationReceiveNotificationRequestTypeEnum = {
    Memory: 'Memory',
    Cpu: 'CPU'
} as const;
export type NotificationReceiveNotificationRequestTypeEnum = typeof NotificationReceiveNotificationRequestTypeEnum[keyof typeof NotificationReceiveNotificationRequestTypeEnum];


/**
 * Check if a given object implements the NotificationReceiveNotificationRequest interface.
 */
export function instanceOfNotificationReceiveNotificationRequest(value: object): value is NotificationReceiveNotificationRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('threshold' in value) || value['threshold'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    return true;
}

export function NotificationReceiveNotificationRequestFromJSON(json: any): NotificationReceiveNotificationRequest {
    return NotificationReceiveNotificationRequestFromJSONTyped(json, false);
}

export function NotificationReceiveNotificationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationReceiveNotificationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'serverType': json['ServerType'] == null ? undefined : json['ServerType'],
        'type': json['Type'],
        'value': json['Value'],
        'threshold': json['Threshold'],
        'message': json['Message'],
        'timestamp': json['Timestamp'],
        'token': json['Token'],
    };
}

export function NotificationReceiveNotificationRequestToJSON(json: any): NotificationReceiveNotificationRequest {
    return NotificationReceiveNotificationRequestToJSONTyped(json, false);
}

export function NotificationReceiveNotificationRequestToJSONTyped(value?: NotificationReceiveNotificationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ServerType': value['serverType'],
        'Type': value['type'],
        'Value': value['value'],
        'Threshold': value['threshold'],
        'Message': value['message'],
        'Timestamp': value['timestamp'],
        'Token': value['token'],
    };
}

