/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationCreateTelegramRequest
 */
export interface NotificationCreateTelegramRequest {
    /**
     * 
     * @type {boolean}
     * @memberof NotificationCreateTelegramRequest
     */
    appBuildError: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationCreateTelegramRequest
     */
    databaseBackup: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationCreateTelegramRequest
     */
    dokployRestart: boolean;
    /**
     * 
     * @type {string}
     * @memberof NotificationCreateTelegramRequest
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationCreateTelegramRequest
     */
    appDeploy: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationCreateTelegramRequest
     */
    dockerCleanup: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationCreateTelegramRequest
     */
    serverThreshold: boolean;
    /**
     * 
     * @type {string}
     * @memberof NotificationCreateTelegramRequest
     */
    botToken: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationCreateTelegramRequest
     */
    chatId: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationCreateTelegramRequest
     */
    messageThreadId: string;
}

/**
 * Check if a given object implements the NotificationCreateTelegramRequest interface.
 */
export function instanceOfNotificationCreateTelegramRequest(value: object): value is NotificationCreateTelegramRequest {
    if (!('appBuildError' in value) || value['appBuildError'] === undefined) return false;
    if (!('databaseBackup' in value) || value['databaseBackup'] === undefined) return false;
    if (!('dokployRestart' in value) || value['dokployRestart'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('appDeploy' in value) || value['appDeploy'] === undefined) return false;
    if (!('dockerCleanup' in value) || value['dockerCleanup'] === undefined) return false;
    if (!('serverThreshold' in value) || value['serverThreshold'] === undefined) return false;
    if (!('botToken' in value) || value['botToken'] === undefined) return false;
    if (!('chatId' in value) || value['chatId'] === undefined) return false;
    if (!('messageThreadId' in value) || value['messageThreadId'] === undefined) return false;
    return true;
}

export function NotificationCreateTelegramRequestFromJSON(json: any): NotificationCreateTelegramRequest {
    return NotificationCreateTelegramRequestFromJSONTyped(json, false);
}

export function NotificationCreateTelegramRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationCreateTelegramRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'appBuildError': json['appBuildError'],
        'databaseBackup': json['databaseBackup'],
        'dokployRestart': json['dokployRestart'],
        'name': json['name'],
        'appDeploy': json['appDeploy'],
        'dockerCleanup': json['dockerCleanup'],
        'serverThreshold': json['serverThreshold'],
        'botToken': json['botToken'],
        'chatId': json['chatId'],
        'messageThreadId': json['messageThreadId'],
    };
}

export function NotificationCreateTelegramRequestToJSON(json: any): NotificationCreateTelegramRequest {
    return NotificationCreateTelegramRequestToJSONTyped(json, false);
}

export function NotificationCreateTelegramRequestToJSONTyped(value?: NotificationCreateTelegramRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'appBuildError': value['appBuildError'],
        'databaseBackup': value['databaseBackup'],
        'dokployRestart': value['dokployRestart'],
        'name': value['name'],
        'appDeploy': value['appDeploy'],
        'dockerCleanup': value['dockerCleanup'],
        'serverThreshold': value['serverThreshold'],
        'botToken': value['botToken'],
        'chatId': value['chatId'],
        'messageThreadId': value['messageThreadId'],
    };
}

