/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApplicationUpdateRequestModeSwarm } from './ApplicationUpdateRequestModeSwarm';
import {
    ApplicationUpdateRequestModeSwarmFromJSON,
    ApplicationUpdateRequestModeSwarmFromJSONTyped,
    ApplicationUpdateRequestModeSwarmToJSON,
    ApplicationUpdateRequestModeSwarmToJSONTyped,
} from './ApplicationUpdateRequestModeSwarm';
import type { ApplicationUpdateRequestPlacementSwarm } from './ApplicationUpdateRequestPlacementSwarm';
import {
    ApplicationUpdateRequestPlacementSwarmFromJSON,
    ApplicationUpdateRequestPlacementSwarmFromJSONTyped,
    ApplicationUpdateRequestPlacementSwarmToJSON,
    ApplicationUpdateRequestPlacementSwarmToJSONTyped,
} from './ApplicationUpdateRequestPlacementSwarm';
import type { ApplicationUpdateRequestUpdateConfigSwarm } from './ApplicationUpdateRequestUpdateConfigSwarm';
import {
    ApplicationUpdateRequestUpdateConfigSwarmFromJSON,
    ApplicationUpdateRequestUpdateConfigSwarmFromJSONTyped,
    ApplicationUpdateRequestUpdateConfigSwarmToJSON,
    ApplicationUpdateRequestUpdateConfigSwarmToJSONTyped,
} from './ApplicationUpdateRequestUpdateConfigSwarm';
import type { ApplicationUpdateRequestHealthCheckSwarm } from './ApplicationUpdateRequestHealthCheckSwarm';
import {
    ApplicationUpdateRequestHealthCheckSwarmFromJSON,
    ApplicationUpdateRequestHealthCheckSwarmFromJSONTyped,
    ApplicationUpdateRequestHealthCheckSwarmToJSON,
    ApplicationUpdateRequestHealthCheckSwarmToJSONTyped,
} from './ApplicationUpdateRequestHealthCheckSwarm';
import type { ApplicationUpdateRequestRestartPolicySwarm } from './ApplicationUpdateRequestRestartPolicySwarm';
import {
    ApplicationUpdateRequestRestartPolicySwarmFromJSON,
    ApplicationUpdateRequestRestartPolicySwarmFromJSONTyped,
    ApplicationUpdateRequestRestartPolicySwarmToJSON,
    ApplicationUpdateRequestRestartPolicySwarmToJSONTyped,
} from './ApplicationUpdateRequestRestartPolicySwarm';
import type { ApplicationUpdateRequestNetworkSwarmInner } from './ApplicationUpdateRequestNetworkSwarmInner';
import {
    ApplicationUpdateRequestNetworkSwarmInnerFromJSON,
    ApplicationUpdateRequestNetworkSwarmInnerFromJSONTyped,
    ApplicationUpdateRequestNetworkSwarmInnerToJSON,
    ApplicationUpdateRequestNetworkSwarmInnerToJSONTyped,
} from './ApplicationUpdateRequestNetworkSwarmInner';

/**
 * 
 * @export
 * @interface ApplicationUpdateRequest
 */
export interface ApplicationUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    applicationId: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    appName?: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    env?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    previewEnv?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApplicationUpdateRequest
     */
    watchPaths?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    previewBuildArgs?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    previewWildcard?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ApplicationUpdateRequest
     */
    previewPort?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationUpdateRequest
     */
    previewHttps?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    previewPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    previewCertificateType?: ApplicationUpdateRequestPreviewCertificateTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    previewCustomCertResolver?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ApplicationUpdateRequest
     */
    previewLimit?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationUpdateRequest
     */
    isPreviewDeploymentsActive?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    buildArgs?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    memoryReservation?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    memoryLimit?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    cpuReservation?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    cpuLimit?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    title?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationUpdateRequest
     */
    enabled?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    subtitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    command?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    refreshToken?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    sourceType?: ApplicationUpdateRequestSourceTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationUpdateRequest
     */
    cleanCache?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    repository?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    owner?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    branch?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    buildPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    triggerType?: ApplicationUpdateRequestTriggerTypeEnum | null;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationUpdateRequest
     */
    autoDeploy?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof ApplicationUpdateRequest
     */
    gitlabProjectId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    gitlabRepository?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    gitlabOwner?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    gitlabBranch?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    gitlabBuildPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    gitlabPathNamespace?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    giteaRepository?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    giteaOwner?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    giteaBranch?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    giteaBuildPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    bitbucketRepository?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    bitbucketOwner?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    bitbucketBranch?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    bitbucketBuildPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    username?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    password?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    dockerImage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    registryUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    customGitUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    customGitBranch?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    customGitBuildPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    customGitSSHKeyId?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationUpdateRequest
     */
    enableSubmodules?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    dockerfile?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    dockerContextPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    dockerBuildStage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    dropBuildPath?: string | null;
    /**
     * 
     * @type {ApplicationUpdateRequestHealthCheckSwarm}
     * @memberof ApplicationUpdateRequest
     */
    healthCheckSwarm?: ApplicationUpdateRequestHealthCheckSwarm | null;
    /**
     * 
     * @type {ApplicationUpdateRequestRestartPolicySwarm}
     * @memberof ApplicationUpdateRequest
     */
    restartPolicySwarm?: ApplicationUpdateRequestRestartPolicySwarm | null;
    /**
     * 
     * @type {ApplicationUpdateRequestPlacementSwarm}
     * @memberof ApplicationUpdateRequest
     */
    placementSwarm?: ApplicationUpdateRequestPlacementSwarm | null;
    /**
     * 
     * @type {ApplicationUpdateRequestUpdateConfigSwarm}
     * @memberof ApplicationUpdateRequest
     */
    updateConfigSwarm?: ApplicationUpdateRequestUpdateConfigSwarm | null;
    /**
     * 
     * @type {ApplicationUpdateRequestUpdateConfigSwarm}
     * @memberof ApplicationUpdateRequest
     */
    rollbackConfigSwarm?: ApplicationUpdateRequestUpdateConfigSwarm | null;
    /**
     * 
     * @type {ApplicationUpdateRequestModeSwarm}
     * @memberof ApplicationUpdateRequest
     */
    modeSwarm?: ApplicationUpdateRequestModeSwarm | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ApplicationUpdateRequest
     */
    labelsSwarm?: { [key: string]: string; } | null;
    /**
     * 
     * @type {Array<ApplicationUpdateRequestNetworkSwarmInner>}
     * @memberof ApplicationUpdateRequest
     */
    networkSwarm?: Array<ApplicationUpdateRequestNetworkSwarmInner> | null;
    /**
     * 
     * @type {number}
     * @memberof ApplicationUpdateRequest
     */
    replicas?: number;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    applicationStatus?: ApplicationUpdateRequestApplicationStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    buildType?: ApplicationUpdateRequestBuildTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    herokuVersion?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    publishDirectory?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationUpdateRequest
     */
    isStaticSpa?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    registryId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    projectId?: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    githubId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    gitlabId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    giteaId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationUpdateRequest
     */
    bitbucketId?: string | null;
}


/**
 * @export
 */
export const ApplicationUpdateRequestPreviewCertificateTypeEnum = {
    Letsencrypt: 'letsencrypt',
    None: 'none',
    Custom: 'custom'
} as const;
export type ApplicationUpdateRequestPreviewCertificateTypeEnum = typeof ApplicationUpdateRequestPreviewCertificateTypeEnum[keyof typeof ApplicationUpdateRequestPreviewCertificateTypeEnum];

/**
 * @export
 */
export const ApplicationUpdateRequestSourceTypeEnum = {
    Github: 'github',
    Docker: 'docker',
    Git: 'git',
    Gitlab: 'gitlab',
    Bitbucket: 'bitbucket',
    Gitea: 'gitea',
    Drop: 'drop'
} as const;
export type ApplicationUpdateRequestSourceTypeEnum = typeof ApplicationUpdateRequestSourceTypeEnum[keyof typeof ApplicationUpdateRequestSourceTypeEnum];

/**
 * @export
 */
export const ApplicationUpdateRequestTriggerTypeEnum = {
    Push: 'push',
    Tag: 'tag'
} as const;
export type ApplicationUpdateRequestTriggerTypeEnum = typeof ApplicationUpdateRequestTriggerTypeEnum[keyof typeof ApplicationUpdateRequestTriggerTypeEnum];

/**
 * @export
 */
export const ApplicationUpdateRequestApplicationStatusEnum = {
    Idle: 'idle',
    Running: 'running',
    Done: 'done',
    Error: 'error'
} as const;
export type ApplicationUpdateRequestApplicationStatusEnum = typeof ApplicationUpdateRequestApplicationStatusEnum[keyof typeof ApplicationUpdateRequestApplicationStatusEnum];

/**
 * @export
 */
export const ApplicationUpdateRequestBuildTypeEnum = {
    Dockerfile: 'dockerfile',
    HerokuBuildpacks: 'heroku_buildpacks',
    PaketoBuildpacks: 'paketo_buildpacks',
    Nixpacks: 'nixpacks',
    Static: 'static',
    Railpack: 'railpack'
} as const;
export type ApplicationUpdateRequestBuildTypeEnum = typeof ApplicationUpdateRequestBuildTypeEnum[keyof typeof ApplicationUpdateRequestBuildTypeEnum];


/**
 * Check if a given object implements the ApplicationUpdateRequest interface.
 */
export function instanceOfApplicationUpdateRequest(value: object): value is ApplicationUpdateRequest {
    if (!('applicationId' in value) || value['applicationId'] === undefined) return false;
    return true;
}

export function ApplicationUpdateRequestFromJSON(json: any): ApplicationUpdateRequest {
    return ApplicationUpdateRequestFromJSONTyped(json, false);
}

export function ApplicationUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'applicationId': json['applicationId'],
        'name': json['name'] == null ? undefined : json['name'],
        'appName': json['appName'] == null ? undefined : json['appName'],
        'description': json['description'] == null ? undefined : json['description'],
        'env': json['env'] == null ? undefined : json['env'],
        'previewEnv': json['previewEnv'] == null ? undefined : json['previewEnv'],
        'watchPaths': json['watchPaths'] == null ? undefined : json['watchPaths'],
        'previewBuildArgs': json['previewBuildArgs'] == null ? undefined : json['previewBuildArgs'],
        'previewWildcard': json['previewWildcard'] == null ? undefined : json['previewWildcard'],
        'previewPort': json['previewPort'] == null ? undefined : json['previewPort'],
        'previewHttps': json['previewHttps'] == null ? undefined : json['previewHttps'],
        'previewPath': json['previewPath'] == null ? undefined : json['previewPath'],
        'previewCertificateType': json['previewCertificateType'] == null ? undefined : json['previewCertificateType'],
        'previewCustomCertResolver': json['previewCustomCertResolver'] == null ? undefined : json['previewCustomCertResolver'],
        'previewLimit': json['previewLimit'] == null ? undefined : json['previewLimit'],
        'isPreviewDeploymentsActive': json['isPreviewDeploymentsActive'] == null ? undefined : json['isPreviewDeploymentsActive'],
        'buildArgs': json['buildArgs'] == null ? undefined : json['buildArgs'],
        'memoryReservation': json['memoryReservation'] == null ? undefined : json['memoryReservation'],
        'memoryLimit': json['memoryLimit'] == null ? undefined : json['memoryLimit'],
        'cpuReservation': json['cpuReservation'] == null ? undefined : json['cpuReservation'],
        'cpuLimit': json['cpuLimit'] == null ? undefined : json['cpuLimit'],
        'title': json['title'] == null ? undefined : json['title'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'subtitle': json['subtitle'] == null ? undefined : json['subtitle'],
        'command': json['command'] == null ? undefined : json['command'],
        'refreshToken': json['refreshToken'] == null ? undefined : json['refreshToken'],
        'sourceType': json['sourceType'] == null ? undefined : json['sourceType'],
        'cleanCache': json['cleanCache'] == null ? undefined : json['cleanCache'],
        'repository': json['repository'] == null ? undefined : json['repository'],
        'owner': json['owner'] == null ? undefined : json['owner'],
        'branch': json['branch'] == null ? undefined : json['branch'],
        'buildPath': json['buildPath'] == null ? undefined : json['buildPath'],
        'triggerType': json['triggerType'] == null ? undefined : json['triggerType'],
        'autoDeploy': json['autoDeploy'] == null ? undefined : json['autoDeploy'],
        'gitlabProjectId': json['gitlabProjectId'] == null ? undefined : json['gitlabProjectId'],
        'gitlabRepository': json['gitlabRepository'] == null ? undefined : json['gitlabRepository'],
        'gitlabOwner': json['gitlabOwner'] == null ? undefined : json['gitlabOwner'],
        'gitlabBranch': json['gitlabBranch'] == null ? undefined : json['gitlabBranch'],
        'gitlabBuildPath': json['gitlabBuildPath'] == null ? undefined : json['gitlabBuildPath'],
        'gitlabPathNamespace': json['gitlabPathNamespace'] == null ? undefined : json['gitlabPathNamespace'],
        'giteaRepository': json['giteaRepository'] == null ? undefined : json['giteaRepository'],
        'giteaOwner': json['giteaOwner'] == null ? undefined : json['giteaOwner'],
        'giteaBranch': json['giteaBranch'] == null ? undefined : json['giteaBranch'],
        'giteaBuildPath': json['giteaBuildPath'] == null ? undefined : json['giteaBuildPath'],
        'bitbucketRepository': json['bitbucketRepository'] == null ? undefined : json['bitbucketRepository'],
        'bitbucketOwner': json['bitbucketOwner'] == null ? undefined : json['bitbucketOwner'],
        'bitbucketBranch': json['bitbucketBranch'] == null ? undefined : json['bitbucketBranch'],
        'bitbucketBuildPath': json['bitbucketBuildPath'] == null ? undefined : json['bitbucketBuildPath'],
        'username': json['username'] == null ? undefined : json['username'],
        'password': json['password'] == null ? undefined : json['password'],
        'dockerImage': json['dockerImage'] == null ? undefined : json['dockerImage'],
        'registryUrl': json['registryUrl'] == null ? undefined : json['registryUrl'],
        'customGitUrl': json['customGitUrl'] == null ? undefined : json['customGitUrl'],
        'customGitBranch': json['customGitBranch'] == null ? undefined : json['customGitBranch'],
        'customGitBuildPath': json['customGitBuildPath'] == null ? undefined : json['customGitBuildPath'],
        'customGitSSHKeyId': json['customGitSSHKeyId'] == null ? undefined : json['customGitSSHKeyId'],
        'enableSubmodules': json['enableSubmodules'] == null ? undefined : json['enableSubmodules'],
        'dockerfile': json['dockerfile'] == null ? undefined : json['dockerfile'],
        'dockerContextPath': json['dockerContextPath'] == null ? undefined : json['dockerContextPath'],
        'dockerBuildStage': json['dockerBuildStage'] == null ? undefined : json['dockerBuildStage'],
        'dropBuildPath': json['dropBuildPath'] == null ? undefined : json['dropBuildPath'],
        'healthCheckSwarm': json['healthCheckSwarm'] == null ? undefined : ApplicationUpdateRequestHealthCheckSwarmFromJSON(json['healthCheckSwarm']),
        'restartPolicySwarm': json['restartPolicySwarm'] == null ? undefined : ApplicationUpdateRequestRestartPolicySwarmFromJSON(json['restartPolicySwarm']),
        'placementSwarm': json['placementSwarm'] == null ? undefined : ApplicationUpdateRequestPlacementSwarmFromJSON(json['placementSwarm']),
        'updateConfigSwarm': json['updateConfigSwarm'] == null ? undefined : ApplicationUpdateRequestUpdateConfigSwarmFromJSON(json['updateConfigSwarm']),
        'rollbackConfigSwarm': json['rollbackConfigSwarm'] == null ? undefined : ApplicationUpdateRequestUpdateConfigSwarmFromJSON(json['rollbackConfigSwarm']),
        'modeSwarm': json['modeSwarm'] == null ? undefined : ApplicationUpdateRequestModeSwarmFromJSON(json['modeSwarm']),
        'labelsSwarm': json['labelsSwarm'] == null ? undefined : json['labelsSwarm'],
        'networkSwarm': json['networkSwarm'] == null ? undefined : ((json['networkSwarm'] as Array<any>).map(ApplicationUpdateRequestNetworkSwarmInnerFromJSON)),
        'replicas': json['replicas'] == null ? undefined : json['replicas'],
        'applicationStatus': json['applicationStatus'] == null ? undefined : json['applicationStatus'],
        'buildType': json['buildType'] == null ? undefined : json['buildType'],
        'herokuVersion': json['herokuVersion'] == null ? undefined : json['herokuVersion'],
        'publishDirectory': json['publishDirectory'] == null ? undefined : json['publishDirectory'],
        'isStaticSpa': json['isStaticSpa'] == null ? undefined : json['isStaticSpa'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'registryId': json['registryId'] == null ? undefined : json['registryId'],
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'githubId': json['githubId'] == null ? undefined : json['githubId'],
        'gitlabId': json['gitlabId'] == null ? undefined : json['gitlabId'],
        'giteaId': json['giteaId'] == null ? undefined : json['giteaId'],
        'bitbucketId': json['bitbucketId'] == null ? undefined : json['bitbucketId'],
    };
}

export function ApplicationUpdateRequestToJSON(json: any): ApplicationUpdateRequest {
    return ApplicationUpdateRequestToJSONTyped(json, false);
}

export function ApplicationUpdateRequestToJSONTyped(value?: ApplicationUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'applicationId': value['applicationId'],
        'name': value['name'],
        'appName': value['appName'],
        'description': value['description'],
        'env': value['env'],
        'previewEnv': value['previewEnv'],
        'watchPaths': value['watchPaths'],
        'previewBuildArgs': value['previewBuildArgs'],
        'previewWildcard': value['previewWildcard'],
        'previewPort': value['previewPort'],
        'previewHttps': value['previewHttps'],
        'previewPath': value['previewPath'],
        'previewCertificateType': value['previewCertificateType'],
        'previewCustomCertResolver': value['previewCustomCertResolver'],
        'previewLimit': value['previewLimit'],
        'isPreviewDeploymentsActive': value['isPreviewDeploymentsActive'],
        'buildArgs': value['buildArgs'],
        'memoryReservation': value['memoryReservation'],
        'memoryLimit': value['memoryLimit'],
        'cpuReservation': value['cpuReservation'],
        'cpuLimit': value['cpuLimit'],
        'title': value['title'],
        'enabled': value['enabled'],
        'subtitle': value['subtitle'],
        'command': value['command'],
        'refreshToken': value['refreshToken'],
        'sourceType': value['sourceType'],
        'cleanCache': value['cleanCache'],
        'repository': value['repository'],
        'owner': value['owner'],
        'branch': value['branch'],
        'buildPath': value['buildPath'],
        'triggerType': value['triggerType'],
        'autoDeploy': value['autoDeploy'],
        'gitlabProjectId': value['gitlabProjectId'],
        'gitlabRepository': value['gitlabRepository'],
        'gitlabOwner': value['gitlabOwner'],
        'gitlabBranch': value['gitlabBranch'],
        'gitlabBuildPath': value['gitlabBuildPath'],
        'gitlabPathNamespace': value['gitlabPathNamespace'],
        'giteaRepository': value['giteaRepository'],
        'giteaOwner': value['giteaOwner'],
        'giteaBranch': value['giteaBranch'],
        'giteaBuildPath': value['giteaBuildPath'],
        'bitbucketRepository': value['bitbucketRepository'],
        'bitbucketOwner': value['bitbucketOwner'],
        'bitbucketBranch': value['bitbucketBranch'],
        'bitbucketBuildPath': value['bitbucketBuildPath'],
        'username': value['username'],
        'password': value['password'],
        'dockerImage': value['dockerImage'],
        'registryUrl': value['registryUrl'],
        'customGitUrl': value['customGitUrl'],
        'customGitBranch': value['customGitBranch'],
        'customGitBuildPath': value['customGitBuildPath'],
        'customGitSSHKeyId': value['customGitSSHKeyId'],
        'enableSubmodules': value['enableSubmodules'],
        'dockerfile': value['dockerfile'],
        'dockerContextPath': value['dockerContextPath'],
        'dockerBuildStage': value['dockerBuildStage'],
        'dropBuildPath': value['dropBuildPath'],
        'healthCheckSwarm': ApplicationUpdateRequestHealthCheckSwarmToJSON(value['healthCheckSwarm']),
        'restartPolicySwarm': ApplicationUpdateRequestRestartPolicySwarmToJSON(value['restartPolicySwarm']),
        'placementSwarm': ApplicationUpdateRequestPlacementSwarmToJSON(value['placementSwarm']),
        'updateConfigSwarm': ApplicationUpdateRequestUpdateConfigSwarmToJSON(value['updateConfigSwarm']),
        'rollbackConfigSwarm': ApplicationUpdateRequestUpdateConfigSwarmToJSON(value['rollbackConfigSwarm']),
        'modeSwarm': ApplicationUpdateRequestModeSwarmToJSON(value['modeSwarm']),
        'labelsSwarm': value['labelsSwarm'],
        'networkSwarm': value['networkSwarm'] == null ? undefined : ((value['networkSwarm'] as Array<any>).map(ApplicationUpdateRequestNetworkSwarmInnerToJSON)),
        'replicas': value['replicas'],
        'applicationStatus': value['applicationStatus'],
        'buildType': value['buildType'],
        'herokuVersion': value['herokuVersion'],
        'publishDirectory': value['publishDirectory'],
        'isStaticSpa': value['isStaticSpa'],
        'createdAt': value['createdAt'],
        'registryId': value['registryId'],
        'projectId': value['projectId'],
        'githubId': value['githubId'],
        'gitlabId': value['gitlabId'],
        'giteaId': value['giteaId'],
        'bitbucketId': value['bitbucketId'],
    };
}

