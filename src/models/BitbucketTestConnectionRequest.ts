/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BitbucketTestConnectionRequest
 */
export interface BitbucketTestConnectionRequest {
    /**
     * 
     * @type {string}
     * @memberof BitbucketTestConnectionRequest
     */
    bitbucketId: string;
    /**
     * 
     * @type {string}
     * @memberof BitbucketTestConnectionRequest
     */
    bitbucketUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof BitbucketTestConnectionRequest
     */
    workspaceName?: string;
}

/**
 * Check if a given object implements the BitbucketTestConnectionRequest interface.
 */
export function instanceOfBitbucketTestConnectionRequest(value: object): value is BitbucketTestConnectionRequest {
    if (!('bitbucketId' in value) || value['bitbucketId'] === undefined) return false;
    return true;
}

export function BitbucketTestConnectionRequestFromJSON(json: any): BitbucketTestConnectionRequest {
    return BitbucketTestConnectionRequestFromJSONTyped(json, false);
}

export function BitbucketTestConnectionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BitbucketTestConnectionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'bitbucketId': json['bitbucketId'],
        'bitbucketUsername': json['bitbucketUsername'] == null ? undefined : json['bitbucketUsername'],
        'workspaceName': json['workspaceName'] == null ? undefined : json['workspaceName'],
    };
}

export function BitbucketTestConnectionRequestToJSON(json: any): BitbucketTestConnectionRequest {
    return BitbucketTestConnectionRequestToJSONTyped(json, false);
}

export function BitbucketTestConnectionRequestToJSONTyped(value?: BitbucketTestConnectionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bitbucketId': value['bitbucketId'],
        'bitbucketUsername': value['bitbucketUsername'],
        'workspaceName': value['workspaceName'],
    };
}

