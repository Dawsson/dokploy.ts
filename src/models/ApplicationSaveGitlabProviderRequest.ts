/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApplicationSaveGitlabProviderRequest
 */
export interface ApplicationSaveGitlabProviderRequest {
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGitlabProviderRequest
     */
    applicationId: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGitlabProviderRequest
     */
    gitlabBranch: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGitlabProviderRequest
     */
    gitlabBuildPath: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGitlabProviderRequest
     */
    gitlabOwner: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGitlabProviderRequest
     */
    gitlabRepository: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGitlabProviderRequest
     */
    gitlabId: string | null;
    /**
     * 
     * @type {number}
     * @memberof ApplicationSaveGitlabProviderRequest
     */
    gitlabProjectId: number | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGitlabProviderRequest
     */
    gitlabPathNamespace: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApplicationSaveGitlabProviderRequest
     */
    watchPaths?: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationSaveGitlabProviderRequest
     */
    enableSubmodules: boolean;
}

/**
 * Check if a given object implements the ApplicationSaveGitlabProviderRequest interface.
 */
export function instanceOfApplicationSaveGitlabProviderRequest(value: object): value is ApplicationSaveGitlabProviderRequest {
    if (!('applicationId' in value) || value['applicationId'] === undefined) return false;
    if (!('gitlabBranch' in value) || value['gitlabBranch'] === undefined) return false;
    if (!('gitlabBuildPath' in value) || value['gitlabBuildPath'] === undefined) return false;
    if (!('gitlabOwner' in value) || value['gitlabOwner'] === undefined) return false;
    if (!('gitlabRepository' in value) || value['gitlabRepository'] === undefined) return false;
    if (!('gitlabId' in value) || value['gitlabId'] === undefined) return false;
    if (!('gitlabProjectId' in value) || value['gitlabProjectId'] === undefined) return false;
    if (!('gitlabPathNamespace' in value) || value['gitlabPathNamespace'] === undefined) return false;
    if (!('enableSubmodules' in value) || value['enableSubmodules'] === undefined) return false;
    return true;
}

export function ApplicationSaveGitlabProviderRequestFromJSON(json: any): ApplicationSaveGitlabProviderRequest {
    return ApplicationSaveGitlabProviderRequestFromJSONTyped(json, false);
}

export function ApplicationSaveGitlabProviderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationSaveGitlabProviderRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'applicationId': json['applicationId'],
        'gitlabBranch': json['gitlabBranch'],
        'gitlabBuildPath': json['gitlabBuildPath'],
        'gitlabOwner': json['gitlabOwner'],
        'gitlabRepository': json['gitlabRepository'],
        'gitlabId': json['gitlabId'],
        'gitlabProjectId': json['gitlabProjectId'],
        'gitlabPathNamespace': json['gitlabPathNamespace'],
        'watchPaths': json['watchPaths'] == null ? undefined : json['watchPaths'],
        'enableSubmodules': json['enableSubmodules'],
    };
}

export function ApplicationSaveGitlabProviderRequestToJSON(json: any): ApplicationSaveGitlabProviderRequest {
    return ApplicationSaveGitlabProviderRequestToJSONTyped(json, false);
}

export function ApplicationSaveGitlabProviderRequestToJSONTyped(value?: ApplicationSaveGitlabProviderRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'applicationId': value['applicationId'],
        'gitlabBranch': value['gitlabBranch'],
        'gitlabBuildPath': value['gitlabBuildPath'],
        'gitlabOwner': value['gitlabOwner'],
        'gitlabRepository': value['gitlabRepository'],
        'gitlabId': value['gitlabId'],
        'gitlabProjectId': value['gitlabProjectId'],
        'gitlabPathNamespace': value['gitlabPathNamespace'],
        'watchPaths': value['watchPaths'],
        'enableSubmodules': value['enableSubmodules'],
    };
}

