/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CertificatesCreateRequest
 */
export interface CertificatesCreateRequest {
    /**
     * 
     * @type {string}
     * @memberof CertificatesCreateRequest
     */
    certificateId?: string;
    /**
     * 
     * @type {string}
     * @memberof CertificatesCreateRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CertificatesCreateRequest
     */
    certificateData: string;
    /**
     * 
     * @type {string}
     * @memberof CertificatesCreateRequest
     */
    privateKey: string;
    /**
     * 
     * @type {string}
     * @memberof CertificatesCreateRequest
     */
    certificatePath?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CertificatesCreateRequest
     */
    autoRenew?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof CertificatesCreateRequest
     */
    organizationId: string;
    /**
     * 
     * @type {string}
     * @memberof CertificatesCreateRequest
     */
    serverId?: string | null;
}

/**
 * Check if a given object implements the CertificatesCreateRequest interface.
 */
export function instanceOfCertificatesCreateRequest(value: object): value is CertificatesCreateRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('certificateData' in value) || value['certificateData'] === undefined) return false;
    if (!('privateKey' in value) || value['privateKey'] === undefined) return false;
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    return true;
}

export function CertificatesCreateRequestFromJSON(json: any): CertificatesCreateRequest {
    return CertificatesCreateRequestFromJSONTyped(json, false);
}

export function CertificatesCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CertificatesCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'certificateId': json['certificateId'] == null ? undefined : json['certificateId'],
        'name': json['name'],
        'certificateData': json['certificateData'],
        'privateKey': json['privateKey'],
        'certificatePath': json['certificatePath'] == null ? undefined : json['certificatePath'],
        'autoRenew': json['autoRenew'] == null ? undefined : json['autoRenew'],
        'organizationId': json['organizationId'],
        'serverId': json['serverId'] == null ? undefined : json['serverId'],
    };
}

export function CertificatesCreateRequestToJSON(json: any): CertificatesCreateRequest {
    return CertificatesCreateRequestToJSONTyped(json, false);
}

export function CertificatesCreateRequestToJSONTyped(value?: CertificatesCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'certificateId': value['certificateId'],
        'name': value['name'],
        'certificateData': value['certificateData'],
        'privateKey': value['privateKey'],
        'certificatePath': value['certificatePath'],
        'autoRenew': value['autoRenew'],
        'organizationId': value['organizationId'],
        'serverId': value['serverId'],
    };
}

