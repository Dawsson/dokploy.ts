/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationTestSlackConnectionRequest
 */
export interface NotificationTestSlackConnectionRequest {
    /**
     * 
     * @type {string}
     * @memberof NotificationTestSlackConnectionRequest
     */
    webhookUrl: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationTestSlackConnectionRequest
     */
    channel: string;
}

/**
 * Check if a given object implements the NotificationTestSlackConnectionRequest interface.
 */
export function instanceOfNotificationTestSlackConnectionRequest(value: object): value is NotificationTestSlackConnectionRequest {
    if (!('webhookUrl' in value) || value['webhookUrl'] === undefined) return false;
    if (!('channel' in value) || value['channel'] === undefined) return false;
    return true;
}

export function NotificationTestSlackConnectionRequestFromJSON(json: any): NotificationTestSlackConnectionRequest {
    return NotificationTestSlackConnectionRequestFromJSONTyped(json, false);
}

export function NotificationTestSlackConnectionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationTestSlackConnectionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'webhookUrl': json['webhookUrl'],
        'channel': json['channel'],
    };
}

export function NotificationTestSlackConnectionRequestToJSON(json: any): NotificationTestSlackConnectionRequest {
    return NotificationTestSlackConnectionRequestToJSONTyped(json, false);
}

export function NotificationTestSlackConnectionRequestToJSONTyped(value?: NotificationTestSlackConnectionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'webhookUrl': value['webhookUrl'],
        'channel': value['channel'],
    };
}

