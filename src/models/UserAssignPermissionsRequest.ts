/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserAssignPermissionsRequest
 */
export interface UserAssignPermissionsRequest {
    /**
     * 
     * @type {string}
     * @memberof UserAssignPermissionsRequest
     */
    id: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserAssignPermissionsRequest
     */
    accessedProjects: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserAssignPermissionsRequest
     */
    accessedServices: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof UserAssignPermissionsRequest
     */
    canCreateProjects: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserAssignPermissionsRequest
     */
    canCreateServices: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserAssignPermissionsRequest
     */
    canDeleteProjects: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserAssignPermissionsRequest
     */
    canDeleteServices: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserAssignPermissionsRequest
     */
    canAccessToDocker: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserAssignPermissionsRequest
     */
    canAccessToTraefikFiles: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserAssignPermissionsRequest
     */
    canAccessToAPI: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserAssignPermissionsRequest
     */
    canAccessToSSHKeys: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserAssignPermissionsRequest
     */
    canAccessToGitProviders: boolean;
}

/**
 * Check if a given object implements the UserAssignPermissionsRequest interface.
 */
export function instanceOfUserAssignPermissionsRequest(value: object): value is UserAssignPermissionsRequest {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('accessedProjects' in value) || value['accessedProjects'] === undefined) return false;
    if (!('accessedServices' in value) || value['accessedServices'] === undefined) return false;
    if (!('canCreateProjects' in value) || value['canCreateProjects'] === undefined) return false;
    if (!('canCreateServices' in value) || value['canCreateServices'] === undefined) return false;
    if (!('canDeleteProjects' in value) || value['canDeleteProjects'] === undefined) return false;
    if (!('canDeleteServices' in value) || value['canDeleteServices'] === undefined) return false;
    if (!('canAccessToDocker' in value) || value['canAccessToDocker'] === undefined) return false;
    if (!('canAccessToTraefikFiles' in value) || value['canAccessToTraefikFiles'] === undefined) return false;
    if (!('canAccessToAPI' in value) || value['canAccessToAPI'] === undefined) return false;
    if (!('canAccessToSSHKeys' in value) || value['canAccessToSSHKeys'] === undefined) return false;
    if (!('canAccessToGitProviders' in value) || value['canAccessToGitProviders'] === undefined) return false;
    return true;
}

export function UserAssignPermissionsRequestFromJSON(json: any): UserAssignPermissionsRequest {
    return UserAssignPermissionsRequestFromJSONTyped(json, false);
}

export function UserAssignPermissionsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserAssignPermissionsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'accessedProjects': json['accessedProjects'],
        'accessedServices': json['accessedServices'],
        'canCreateProjects': json['canCreateProjects'],
        'canCreateServices': json['canCreateServices'],
        'canDeleteProjects': json['canDeleteProjects'],
        'canDeleteServices': json['canDeleteServices'],
        'canAccessToDocker': json['canAccessToDocker'],
        'canAccessToTraefikFiles': json['canAccessToTraefikFiles'],
        'canAccessToAPI': json['canAccessToAPI'],
        'canAccessToSSHKeys': json['canAccessToSSHKeys'],
        'canAccessToGitProviders': json['canAccessToGitProviders'],
    };
}

export function UserAssignPermissionsRequestToJSON(json: any): UserAssignPermissionsRequest {
    return UserAssignPermissionsRequestToJSONTyped(json, false);
}

export function UserAssignPermissionsRequestToJSONTyped(value?: UserAssignPermissionsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'accessedProjects': value['accessedProjects'],
        'accessedServices': value['accessedServices'],
        'canCreateProjects': value['canCreateProjects'],
        'canCreateServices': value['canCreateServices'],
        'canDeleteProjects': value['canDeleteProjects'],
        'canDeleteServices': value['canDeleteServices'],
        'canAccessToDocker': value['canAccessToDocker'],
        'canAccessToTraefikFiles': value['canAccessToTraefikFiles'],
        'canAccessToAPI': value['canAccessToAPI'],
        'canAccessToSSHKeys': value['canAccessToSSHKeys'],
        'canAccessToGitProviders': value['canAccessToGitProviders'],
    };
}

