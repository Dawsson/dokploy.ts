/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComposeCreateRequest
 */
export interface ComposeCreateRequest {
    /**
     * 
     * @type {string}
     * @memberof ComposeCreateRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ComposeCreateRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ComposeCreateRequest
     */
    projectId: string;
    /**
     * 
     * @type {string}
     * @memberof ComposeCreateRequest
     */
    composeType?: ComposeCreateRequestComposeTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ComposeCreateRequest
     */
    appName?: string;
    /**
     * 
     * @type {string}
     * @memberof ComposeCreateRequest
     */
    serverId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ComposeCreateRequest
     */
    composeFile?: string;
}


/**
 * @export
 */
export const ComposeCreateRequestComposeTypeEnum = {
    DockerCompose: 'docker-compose',
    Stack: 'stack'
} as const;
export type ComposeCreateRequestComposeTypeEnum = typeof ComposeCreateRequestComposeTypeEnum[keyof typeof ComposeCreateRequestComposeTypeEnum];


/**
 * Check if a given object implements the ComposeCreateRequest interface.
 */
export function instanceOfComposeCreateRequest(value: object): value is ComposeCreateRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('projectId' in value) || value['projectId'] === undefined) return false;
    return true;
}

export function ComposeCreateRequestFromJSON(json: any): ComposeCreateRequest {
    return ComposeCreateRequestFromJSONTyped(json, false);
}

export function ComposeCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComposeCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'projectId': json['projectId'],
        'composeType': json['composeType'] == null ? undefined : json['composeType'],
        'appName': json['appName'] == null ? undefined : json['appName'],
        'serverId': json['serverId'] == null ? undefined : json['serverId'],
        'composeFile': json['composeFile'] == null ? undefined : json['composeFile'],
    };
}

export function ComposeCreateRequestToJSON(json: any): ComposeCreateRequest {
    return ComposeCreateRequestToJSONTyped(json, false);
}

export function ComposeCreateRequestToJSONTyped(value?: ComposeCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'projectId': value['projectId'],
        'composeType': value['composeType'],
        'appName': value['appName'],
        'serverId': value['serverId'],
        'composeFile': value['composeFile'],
    };
}

