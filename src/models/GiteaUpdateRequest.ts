/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GiteaUpdateRequest
 */
export interface GiteaUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    giteaId: string;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    giteaUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    redirectUri?: string;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    clientId?: string;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    clientSecret?: string;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    gitProviderId: string;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    accessToken?: string;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    refreshToken?: string;
    /**
     * 
     * @type {number}
     * @memberof GiteaUpdateRequest
     */
    expiresAt?: number;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    scopes?: string;
    /**
     * 
     * @type {number}
     * @memberof GiteaUpdateRequest
     */
    lastAuthenticatedAt?: number;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    giteaUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof GiteaUpdateRequest
     */
    organizationName?: string;
}

/**
 * Check if a given object implements the GiteaUpdateRequest interface.
 */
export function instanceOfGiteaUpdateRequest(value: object): value is GiteaUpdateRequest {
    if (!('giteaId' in value) || value['giteaId'] === undefined) return false;
    if (!('giteaUrl' in value) || value['giteaUrl'] === undefined) return false;
    if (!('gitProviderId' in value) || value['gitProviderId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function GiteaUpdateRequestFromJSON(json: any): GiteaUpdateRequest {
    return GiteaUpdateRequestFromJSONTyped(json, false);
}

export function GiteaUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GiteaUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'giteaId': json['giteaId'],
        'giteaUrl': json['giteaUrl'],
        'redirectUri': json['redirectUri'] == null ? undefined : json['redirectUri'],
        'clientId': json['clientId'] == null ? undefined : json['clientId'],
        'clientSecret': json['clientSecret'] == null ? undefined : json['clientSecret'],
        'gitProviderId': json['gitProviderId'],
        'accessToken': json['accessToken'] == null ? undefined : json['accessToken'],
        'refreshToken': json['refreshToken'] == null ? undefined : json['refreshToken'],
        'expiresAt': json['expiresAt'] == null ? undefined : json['expiresAt'],
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'lastAuthenticatedAt': json['lastAuthenticatedAt'] == null ? undefined : json['lastAuthenticatedAt'],
        'name': json['name'],
        'giteaUsername': json['giteaUsername'] == null ? undefined : json['giteaUsername'],
        'organizationName': json['organizationName'] == null ? undefined : json['organizationName'],
    };
}

export function GiteaUpdateRequestToJSON(json: any): GiteaUpdateRequest {
    return GiteaUpdateRequestToJSONTyped(json, false);
}

export function GiteaUpdateRequestToJSONTyped(value?: GiteaUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'giteaId': value['giteaId'],
        'giteaUrl': value['giteaUrl'],
        'redirectUri': value['redirectUri'],
        'clientId': value['clientId'],
        'clientSecret': value['clientSecret'],
        'gitProviderId': value['gitProviderId'],
        'accessToken': value['accessToken'],
        'refreshToken': value['refreshToken'],
        'expiresAt': value['expiresAt'],
        'scopes': value['scopes'],
        'lastAuthenticatedAt': value['lastAuthenticatedAt'],
        'name': value['name'],
        'giteaUsername': value['giteaUsername'],
        'organizationName': value['organizationName'],
    };
}

