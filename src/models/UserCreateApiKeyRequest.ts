/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserCreateApiKeyRequestMetadata } from './UserCreateApiKeyRequestMetadata';
import {
    UserCreateApiKeyRequestMetadataFromJSON,
    UserCreateApiKeyRequestMetadataFromJSONTyped,
    UserCreateApiKeyRequestMetadataToJSON,
    UserCreateApiKeyRequestMetadataToJSONTyped,
} from './UserCreateApiKeyRequestMetadata';

/**
 * 
 * @export
 * @interface UserCreateApiKeyRequest
 */
export interface UserCreateApiKeyRequest {
    /**
     * 
     * @type {string}
     * @memberof UserCreateApiKeyRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserCreateApiKeyRequest
     */
    prefix?: string;
    /**
     * 
     * @type {number}
     * @memberof UserCreateApiKeyRequest
     */
    expiresIn?: number;
    /**
     * 
     * @type {UserCreateApiKeyRequestMetadata}
     * @memberof UserCreateApiKeyRequest
     */
    metadata: UserCreateApiKeyRequestMetadata;
    /**
     * 
     * @type {boolean}
     * @memberof UserCreateApiKeyRequest
     */
    rateLimitEnabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserCreateApiKeyRequest
     */
    rateLimitTimeWindow?: number;
    /**
     * 
     * @type {number}
     * @memberof UserCreateApiKeyRequest
     */
    rateLimitMax?: number;
    /**
     * 
     * @type {number}
     * @memberof UserCreateApiKeyRequest
     */
    remaining?: number;
    /**
     * 
     * @type {number}
     * @memberof UserCreateApiKeyRequest
     */
    refillAmount?: number;
    /**
     * 
     * @type {number}
     * @memberof UserCreateApiKeyRequest
     */
    refillInterval?: number;
}

/**
 * Check if a given object implements the UserCreateApiKeyRequest interface.
 */
export function instanceOfUserCreateApiKeyRequest(value: object): value is UserCreateApiKeyRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    return true;
}

export function UserCreateApiKeyRequestFromJSON(json: any): UserCreateApiKeyRequest {
    return UserCreateApiKeyRequestFromJSONTyped(json, false);
}

export function UserCreateApiKeyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCreateApiKeyRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'prefix': json['prefix'] == null ? undefined : json['prefix'],
        'expiresIn': json['expiresIn'] == null ? undefined : json['expiresIn'],
        'metadata': UserCreateApiKeyRequestMetadataFromJSON(json['metadata']),
        'rateLimitEnabled': json['rateLimitEnabled'] == null ? undefined : json['rateLimitEnabled'],
        'rateLimitTimeWindow': json['rateLimitTimeWindow'] == null ? undefined : json['rateLimitTimeWindow'],
        'rateLimitMax': json['rateLimitMax'] == null ? undefined : json['rateLimitMax'],
        'remaining': json['remaining'] == null ? undefined : json['remaining'],
        'refillAmount': json['refillAmount'] == null ? undefined : json['refillAmount'],
        'refillInterval': json['refillInterval'] == null ? undefined : json['refillInterval'],
    };
}

export function UserCreateApiKeyRequestToJSON(json: any): UserCreateApiKeyRequest {
    return UserCreateApiKeyRequestToJSONTyped(json, false);
}

export function UserCreateApiKeyRequestToJSONTyped(value?: UserCreateApiKeyRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'prefix': value['prefix'],
        'expiresIn': value['expiresIn'],
        'metadata': UserCreateApiKeyRequestMetadataToJSON(value['metadata']),
        'rateLimitEnabled': value['rateLimitEnabled'],
        'rateLimitTimeWindow': value['rateLimitTimeWindow'],
        'rateLimitMax': value['rateLimitMax'],
        'remaining': value['remaining'],
        'refillAmount': value['refillAmount'],
        'refillInterval': value['refillInterval'],
    };
}

