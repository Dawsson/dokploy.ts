/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SettingsAssignDomainServerRequest
 */
export interface SettingsAssignDomainServerRequest {
    /**
     * 
     * @type {string}
     * @memberof SettingsAssignDomainServerRequest
     */
    host: string | null;
    /**
     * 
     * @type {string}
     * @memberof SettingsAssignDomainServerRequest
     */
    certificateType: SettingsAssignDomainServerRequestCertificateTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SettingsAssignDomainServerRequest
     */
    letsEncryptEmail?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof SettingsAssignDomainServerRequest
     */
    https?: boolean;
}


/**
 * @export
 */
export const SettingsAssignDomainServerRequestCertificateTypeEnum = {
    Letsencrypt: 'letsencrypt',
    None: 'none',
    Custom: 'custom'
} as const;
export type SettingsAssignDomainServerRequestCertificateTypeEnum = typeof SettingsAssignDomainServerRequestCertificateTypeEnum[keyof typeof SettingsAssignDomainServerRequestCertificateTypeEnum];


/**
 * Check if a given object implements the SettingsAssignDomainServerRequest interface.
 */
export function instanceOfSettingsAssignDomainServerRequest(value: object): value is SettingsAssignDomainServerRequest {
    if (!('host' in value) || value['host'] === undefined) return false;
    if (!('certificateType' in value) || value['certificateType'] === undefined) return false;
    return true;
}

export function SettingsAssignDomainServerRequestFromJSON(json: any): SettingsAssignDomainServerRequest {
    return SettingsAssignDomainServerRequestFromJSONTyped(json, false);
}

export function SettingsAssignDomainServerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SettingsAssignDomainServerRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'host': json['host'],
        'certificateType': json['certificateType'],
        'letsEncryptEmail': json['letsEncryptEmail'] == null ? undefined : json['letsEncryptEmail'],
        'https': json['https'] == null ? undefined : json['https'],
    };
}

export function SettingsAssignDomainServerRequestToJSON(json: any): SettingsAssignDomainServerRequest {
    return SettingsAssignDomainServerRequestToJSONTyped(json, false);
}

export function SettingsAssignDomainServerRequestToJSONTyped(value?: SettingsAssignDomainServerRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'host': value['host'],
        'certificateType': value['certificateType'],
        'letsEncryptEmail': value['letsEncryptEmail'],
        'https': value['https'],
    };
}

