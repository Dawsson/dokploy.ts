/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectDuplicateRequestSelectedServicesInner } from './ProjectDuplicateRequestSelectedServicesInner';
import {
    ProjectDuplicateRequestSelectedServicesInnerFromJSON,
    ProjectDuplicateRequestSelectedServicesInnerFromJSONTyped,
    ProjectDuplicateRequestSelectedServicesInnerToJSON,
    ProjectDuplicateRequestSelectedServicesInnerToJSONTyped,
} from './ProjectDuplicateRequestSelectedServicesInner';

/**
 * 
 * @export
 * @interface ProjectDuplicateRequest
 */
export interface ProjectDuplicateRequest {
    /**
     * 
     * @type {string}
     * @memberof ProjectDuplicateRequest
     */
    sourceProjectId: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectDuplicateRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectDuplicateRequest
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ProjectDuplicateRequest
     */
    includeServices?: boolean;
    /**
     * 
     * @type {Array<ProjectDuplicateRequestSelectedServicesInner>}
     * @memberof ProjectDuplicateRequest
     */
    selectedServices?: Array<ProjectDuplicateRequestSelectedServicesInner>;
    /**
     * 
     * @type {boolean}
     * @memberof ProjectDuplicateRequest
     */
    duplicateInSameProject?: boolean;
}

/**
 * Check if a given object implements the ProjectDuplicateRequest interface.
 */
export function instanceOfProjectDuplicateRequest(value: object): value is ProjectDuplicateRequest {
    if (!('sourceProjectId' in value) || value['sourceProjectId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ProjectDuplicateRequestFromJSON(json: any): ProjectDuplicateRequest {
    return ProjectDuplicateRequestFromJSONTyped(json, false);
}

export function ProjectDuplicateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectDuplicateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'sourceProjectId': json['sourceProjectId'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'includeServices': json['includeServices'] == null ? undefined : json['includeServices'],
        'selectedServices': json['selectedServices'] == null ? undefined : ((json['selectedServices'] as Array<any>).map(ProjectDuplicateRequestSelectedServicesInnerFromJSON)),
        'duplicateInSameProject': json['duplicateInSameProject'] == null ? undefined : json['duplicateInSameProject'],
    };
}

export function ProjectDuplicateRequestToJSON(json: any): ProjectDuplicateRequest {
    return ProjectDuplicateRequestToJSONTyped(json, false);
}

export function ProjectDuplicateRequestToJSONTyped(value?: ProjectDuplicateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sourceProjectId': value['sourceProjectId'],
        'name': value['name'],
        'description': value['description'],
        'includeServices': value['includeServices'],
        'selectedServices': value['selectedServices'] == null ? undefined : ((value['selectedServices'] as Array<any>).map(ProjectDuplicateRequestSelectedServicesInnerToJSON)),
        'duplicateInSameProject': value['duplicateInSameProject'],
    };
}

