/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MountsCreateRequest
 */
export interface MountsCreateRequest {
    /**
     * 
     * @type {string}
     * @memberof MountsCreateRequest
     */
    type: MountsCreateRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MountsCreateRequest
     */
    hostPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MountsCreateRequest
     */
    volumeName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MountsCreateRequest
     */
    content?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MountsCreateRequest
     */
    mountPath: string;
    /**
     * 
     * @type {string}
     * @memberof MountsCreateRequest
     */
    serviceType?: MountsCreateRequestServiceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MountsCreateRequest
     */
    filePath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MountsCreateRequest
     */
    serviceId: string;
}


/**
 * @export
 */
export const MountsCreateRequestTypeEnum = {
    Bind: 'bind',
    Volume: 'volume',
    File: 'file'
} as const;
export type MountsCreateRequestTypeEnum = typeof MountsCreateRequestTypeEnum[keyof typeof MountsCreateRequestTypeEnum];

/**
 * @export
 */
export const MountsCreateRequestServiceTypeEnum = {
    Application: 'application',
    Postgres: 'postgres',
    Mysql: 'mysql',
    Mariadb: 'mariadb',
    Mongo: 'mongo',
    Redis: 'redis',
    Compose: 'compose'
} as const;
export type MountsCreateRequestServiceTypeEnum = typeof MountsCreateRequestServiceTypeEnum[keyof typeof MountsCreateRequestServiceTypeEnum];


/**
 * Check if a given object implements the MountsCreateRequest interface.
 */
export function instanceOfMountsCreateRequest(value: object): value is MountsCreateRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('mountPath' in value) || value['mountPath'] === undefined) return false;
    if (!('serviceId' in value) || value['serviceId'] === undefined) return false;
    return true;
}

export function MountsCreateRequestFromJSON(json: any): MountsCreateRequest {
    return MountsCreateRequestFromJSONTyped(json, false);
}

export function MountsCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MountsCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'hostPath': json['hostPath'] == null ? undefined : json['hostPath'],
        'volumeName': json['volumeName'] == null ? undefined : json['volumeName'],
        'content': json['content'] == null ? undefined : json['content'],
        'mountPath': json['mountPath'],
        'serviceType': json['serviceType'] == null ? undefined : json['serviceType'],
        'filePath': json['filePath'] == null ? undefined : json['filePath'],
        'serviceId': json['serviceId'],
    };
}

export function MountsCreateRequestToJSON(json: any): MountsCreateRequest {
    return MountsCreateRequestToJSONTyped(json, false);
}

export function MountsCreateRequestToJSONTyped(value?: MountsCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'hostPath': value['hostPath'],
        'volumeName': value['volumeName'],
        'content': value['content'],
        'mountPath': value['mountPath'],
        'serviceType': value['serviceType'],
        'filePath': value['filePath'],
        'serviceId': value['serviceId'],
    };
}

