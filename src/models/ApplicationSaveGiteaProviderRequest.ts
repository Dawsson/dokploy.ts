/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApplicationSaveGiteaProviderRequest
 */
export interface ApplicationSaveGiteaProviderRequest {
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGiteaProviderRequest
     */
    applicationId: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGiteaProviderRequest
     */
    giteaBranch: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGiteaProviderRequest
     */
    giteaBuildPath: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGiteaProviderRequest
     */
    giteaOwner: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGiteaProviderRequest
     */
    giteaRepository: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGiteaProviderRequest
     */
    giteaId: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApplicationSaveGiteaProviderRequest
     */
    watchPaths?: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationSaveGiteaProviderRequest
     */
    enableSubmodules: boolean;
}

/**
 * Check if a given object implements the ApplicationSaveGiteaProviderRequest interface.
 */
export function instanceOfApplicationSaveGiteaProviderRequest(value: object): value is ApplicationSaveGiteaProviderRequest {
    if (!('applicationId' in value) || value['applicationId'] === undefined) return false;
    if (!('giteaBranch' in value) || value['giteaBranch'] === undefined) return false;
    if (!('giteaBuildPath' in value) || value['giteaBuildPath'] === undefined) return false;
    if (!('giteaOwner' in value) || value['giteaOwner'] === undefined) return false;
    if (!('giteaRepository' in value) || value['giteaRepository'] === undefined) return false;
    if (!('giteaId' in value) || value['giteaId'] === undefined) return false;
    if (!('enableSubmodules' in value) || value['enableSubmodules'] === undefined) return false;
    return true;
}

export function ApplicationSaveGiteaProviderRequestFromJSON(json: any): ApplicationSaveGiteaProviderRequest {
    return ApplicationSaveGiteaProviderRequestFromJSONTyped(json, false);
}

export function ApplicationSaveGiteaProviderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationSaveGiteaProviderRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'applicationId': json['applicationId'],
        'giteaBranch': json['giteaBranch'],
        'giteaBuildPath': json['giteaBuildPath'],
        'giteaOwner': json['giteaOwner'],
        'giteaRepository': json['giteaRepository'],
        'giteaId': json['giteaId'],
        'watchPaths': json['watchPaths'] == null ? undefined : json['watchPaths'],
        'enableSubmodules': json['enableSubmodules'],
    };
}

export function ApplicationSaveGiteaProviderRequestToJSON(json: any): ApplicationSaveGiteaProviderRequest {
    return ApplicationSaveGiteaProviderRequestToJSONTyped(json, false);
}

export function ApplicationSaveGiteaProviderRequestToJSONTyped(value?: ApplicationSaveGiteaProviderRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'applicationId': value['applicationId'],
        'giteaBranch': value['giteaBranch'],
        'giteaBuildPath': value['giteaBuildPath'],
        'giteaOwner': value['giteaOwner'],
        'giteaRepository': value['giteaRepository'],
        'giteaId': value['giteaId'],
        'watchPaths': value['watchPaths'],
        'enableSubmodules': value['enableSubmodules'],
    };
}

