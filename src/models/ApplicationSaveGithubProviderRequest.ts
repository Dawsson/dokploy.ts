/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApplicationSaveGithubProviderRequest
 */
export interface ApplicationSaveGithubProviderRequest {
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGithubProviderRequest
     */
    applicationId: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGithubProviderRequest
     */
    repository?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGithubProviderRequest
     */
    branch?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGithubProviderRequest
     */
    owner: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGithubProviderRequest
     */
    buildPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGithubProviderRequest
     */
    githubId: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApplicationSaveGithubProviderRequest
     */
    watchPaths?: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationSaveGithubProviderRequest
     */
    enableSubmodules: boolean;
    /**
     * 
     * @type {string}
     * @memberof ApplicationSaveGithubProviderRequest
     */
    triggerType?: ApplicationSaveGithubProviderRequestTriggerTypeEnum;
}


/**
 * @export
 */
export const ApplicationSaveGithubProviderRequestTriggerTypeEnum = {
    Push: 'push',
    Tag: 'tag'
} as const;
export type ApplicationSaveGithubProviderRequestTriggerTypeEnum = typeof ApplicationSaveGithubProviderRequestTriggerTypeEnum[keyof typeof ApplicationSaveGithubProviderRequestTriggerTypeEnum];


/**
 * Check if a given object implements the ApplicationSaveGithubProviderRequest interface.
 */
export function instanceOfApplicationSaveGithubProviderRequest(value: object): value is ApplicationSaveGithubProviderRequest {
    if (!('applicationId' in value) || value['applicationId'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('githubId' in value) || value['githubId'] === undefined) return false;
    if (!('enableSubmodules' in value) || value['enableSubmodules'] === undefined) return false;
    return true;
}

export function ApplicationSaveGithubProviderRequestFromJSON(json: any): ApplicationSaveGithubProviderRequest {
    return ApplicationSaveGithubProviderRequestFromJSONTyped(json, false);
}

export function ApplicationSaveGithubProviderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationSaveGithubProviderRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'applicationId': json['applicationId'],
        'repository': json['repository'] == null ? undefined : json['repository'],
        'branch': json['branch'] == null ? undefined : json['branch'],
        'owner': json['owner'],
        'buildPath': json['buildPath'] == null ? undefined : json['buildPath'],
        'githubId': json['githubId'],
        'watchPaths': json['watchPaths'] == null ? undefined : json['watchPaths'],
        'enableSubmodules': json['enableSubmodules'],
        'triggerType': json['triggerType'] == null ? undefined : json['triggerType'],
    };
}

export function ApplicationSaveGithubProviderRequestToJSON(json: any): ApplicationSaveGithubProviderRequest {
    return ApplicationSaveGithubProviderRequestToJSONTyped(json, false);
}

export function ApplicationSaveGithubProviderRequestToJSONTyped(value?: ApplicationSaveGithubProviderRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'applicationId': value['applicationId'],
        'repository': value['repository'],
        'branch': value['branch'],
        'owner': value['owner'],
        'buildPath': value['buildPath'],
        'githubId': value['githubId'],
        'watchPaths': value['watchPaths'],
        'enableSubmodules': value['enableSubmodules'],
        'triggerType': value['triggerType'],
    };
}

