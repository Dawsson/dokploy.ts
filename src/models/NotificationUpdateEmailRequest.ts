/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationUpdateEmailRequest
 */
export interface NotificationUpdateEmailRequest {
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateEmailRequest
     */
    appBuildError?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateEmailRequest
     */
    databaseBackup?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateEmailRequest
     */
    dokployRestart?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateEmailRequest
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateEmailRequest
     */
    appDeploy?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateEmailRequest
     */
    dockerCleanup?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationUpdateEmailRequest
     */
    serverThreshold?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateEmailRequest
     */
    smtpServer?: string;
    /**
     * 
     * @type {number}
     * @memberof NotificationUpdateEmailRequest
     */
    smtpPort?: number;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateEmailRequest
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateEmailRequest
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateEmailRequest
     */
    fromAddress?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof NotificationUpdateEmailRequest
     */
    toAddresses?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateEmailRequest
     */
    notificationId: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateEmailRequest
     */
    emailId: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationUpdateEmailRequest
     */
    organizationId?: string;
}

/**
 * Check if a given object implements the NotificationUpdateEmailRequest interface.
 */
export function instanceOfNotificationUpdateEmailRequest(value: object): value is NotificationUpdateEmailRequest {
    if (!('notificationId' in value) || value['notificationId'] === undefined) return false;
    if (!('emailId' in value) || value['emailId'] === undefined) return false;
    return true;
}

export function NotificationUpdateEmailRequestFromJSON(json: any): NotificationUpdateEmailRequest {
    return NotificationUpdateEmailRequestFromJSONTyped(json, false);
}

export function NotificationUpdateEmailRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationUpdateEmailRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'appBuildError': json['appBuildError'] == null ? undefined : json['appBuildError'],
        'databaseBackup': json['databaseBackup'] == null ? undefined : json['databaseBackup'],
        'dokployRestart': json['dokployRestart'] == null ? undefined : json['dokployRestart'],
        'name': json['name'] == null ? undefined : json['name'],
        'appDeploy': json['appDeploy'] == null ? undefined : json['appDeploy'],
        'dockerCleanup': json['dockerCleanup'] == null ? undefined : json['dockerCleanup'],
        'serverThreshold': json['serverThreshold'] == null ? undefined : json['serverThreshold'],
        'smtpServer': json['smtpServer'] == null ? undefined : json['smtpServer'],
        'smtpPort': json['smtpPort'] == null ? undefined : json['smtpPort'],
        'username': json['username'] == null ? undefined : json['username'],
        'password': json['password'] == null ? undefined : json['password'],
        'fromAddress': json['fromAddress'] == null ? undefined : json['fromAddress'],
        'toAddresses': json['toAddresses'] == null ? undefined : json['toAddresses'],
        'notificationId': json['notificationId'],
        'emailId': json['emailId'],
        'organizationId': json['organizationId'] == null ? undefined : json['organizationId'],
    };
}

export function NotificationUpdateEmailRequestToJSON(json: any): NotificationUpdateEmailRequest {
    return NotificationUpdateEmailRequestToJSONTyped(json, false);
}

export function NotificationUpdateEmailRequestToJSONTyped(value?: NotificationUpdateEmailRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'appBuildError': value['appBuildError'],
        'databaseBackup': value['databaseBackup'],
        'dokployRestart': value['dokployRestart'],
        'name': value['name'],
        'appDeploy': value['appDeploy'],
        'dockerCleanup': value['dockerCleanup'],
        'serverThreshold': value['serverThreshold'],
        'smtpServer': value['smtpServer'],
        'smtpPort': value['smtpPort'],
        'username': value['username'],
        'password': value['password'],
        'fromAddress': value['fromAddress'],
        'toAddresses': value['toAddresses'],
        'notificationId': value['notificationId'],
        'emailId': value['emailId'],
        'organizationId': value['organizationId'],
    };
}

