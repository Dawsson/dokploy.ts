/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PortUpdateRequest
 */
export interface PortUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof PortUpdateRequest
     */
    portId: string;
    /**
     * 
     * @type {number}
     * @memberof PortUpdateRequest
     */
    publishedPort: number;
    /**
     * 
     * @type {number}
     * @memberof PortUpdateRequest
     */
    targetPort: number;
    /**
     * 
     * @type {string}
     * @memberof PortUpdateRequest
     */
    protocol?: PortUpdateRequestProtocolEnum;
}


/**
 * @export
 */
export const PortUpdateRequestProtocolEnum = {
    Tcp: 'tcp',
    Udp: 'udp'
} as const;
export type PortUpdateRequestProtocolEnum = typeof PortUpdateRequestProtocolEnum[keyof typeof PortUpdateRequestProtocolEnum];


/**
 * Check if a given object implements the PortUpdateRequest interface.
 */
export function instanceOfPortUpdateRequest(value: object): value is PortUpdateRequest {
    if (!('portId' in value) || value['portId'] === undefined) return false;
    if (!('publishedPort' in value) || value['publishedPort'] === undefined) return false;
    if (!('targetPort' in value) || value['targetPort'] === undefined) return false;
    return true;
}

export function PortUpdateRequestFromJSON(json: any): PortUpdateRequest {
    return PortUpdateRequestFromJSONTyped(json, false);
}

export function PortUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'portId': json['portId'],
        'publishedPort': json['publishedPort'],
        'targetPort': json['targetPort'],
        'protocol': json['protocol'] == null ? undefined : json['protocol'],
    };
}

export function PortUpdateRequestToJSON(json: any): PortUpdateRequest {
    return PortUpdateRequestToJSONTyped(json, false);
}

export function PortUpdateRequestToJSONTyped(value?: PortUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'portId': value['portId'],
        'publishedPort': value['publishedPort'],
        'targetPort': value['targetPort'],
        'protocol': value['protocol'],
    };
}

