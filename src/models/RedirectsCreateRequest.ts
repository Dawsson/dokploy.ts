/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RedirectsCreateRequest
 */
export interface RedirectsCreateRequest {
    /**
     * 
     * @type {string}
     * @memberof RedirectsCreateRequest
     */
    regex: string;
    /**
     * 
     * @type {string}
     * @memberof RedirectsCreateRequest
     */
    replacement: string;
    /**
     * 
     * @type {boolean}
     * @memberof RedirectsCreateRequest
     */
    permanent: boolean;
    /**
     * 
     * @type {string}
     * @memberof RedirectsCreateRequest
     */
    applicationId: string;
}

/**
 * Check if a given object implements the RedirectsCreateRequest interface.
 */
export function instanceOfRedirectsCreateRequest(value: object): value is RedirectsCreateRequest {
    if (!('regex' in value) || value['regex'] === undefined) return false;
    if (!('replacement' in value) || value['replacement'] === undefined) return false;
    if (!('permanent' in value) || value['permanent'] === undefined) return false;
    if (!('applicationId' in value) || value['applicationId'] === undefined) return false;
    return true;
}

export function RedirectsCreateRequestFromJSON(json: any): RedirectsCreateRequest {
    return RedirectsCreateRequestFromJSONTyped(json, false);
}

export function RedirectsCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RedirectsCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'regex': json['regex'],
        'replacement': json['replacement'],
        'permanent': json['permanent'],
        'applicationId': json['applicationId'],
    };
}

export function RedirectsCreateRequestToJSON(json: any): RedirectsCreateRequest {
    return RedirectsCreateRequestToJSONTyped(json, false);
}

export function RedirectsCreateRequestToJSONTyped(value?: RedirectsCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'regex': value['regex'],
        'replacement': value['replacement'],
        'permanent': value['permanent'],
        'applicationId': value['applicationId'],
    };
}

