/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GithubUpdateRequest
 */
export interface GithubUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof GithubUpdateRequest
     */
    githubId: string;
    /**
     * 
     * @type {string}
     * @memberof GithubUpdateRequest
     */
    githubAppName?: string | null;
    /**
     * 
     * @type {number}
     * @memberof GithubUpdateRequest
     */
    githubAppId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof GithubUpdateRequest
     */
    githubClientId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GithubUpdateRequest
     */
    githubClientSecret?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GithubUpdateRequest
     */
    githubInstallationId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GithubUpdateRequest
     */
    githubPrivateKey?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GithubUpdateRequest
     */
    githubWebhookSecret?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GithubUpdateRequest
     */
    gitProviderId: string;
    /**
     * 
     * @type {string}
     * @memberof GithubUpdateRequest
     */
    name: string;
}

/**
 * Check if a given object implements the GithubUpdateRequest interface.
 */
export function instanceOfGithubUpdateRequest(value: object): value is GithubUpdateRequest {
    if (!('githubId' in value) || value['githubId'] === undefined) return false;
    if (!('gitProviderId' in value) || value['gitProviderId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function GithubUpdateRequestFromJSON(json: any): GithubUpdateRequest {
    return GithubUpdateRequestFromJSONTyped(json, false);
}

export function GithubUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GithubUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'githubId': json['githubId'],
        'githubAppName': json['githubAppName'] == null ? undefined : json['githubAppName'],
        'githubAppId': json['githubAppId'] == null ? undefined : json['githubAppId'],
        'githubClientId': json['githubClientId'] == null ? undefined : json['githubClientId'],
        'githubClientSecret': json['githubClientSecret'] == null ? undefined : json['githubClientSecret'],
        'githubInstallationId': json['githubInstallationId'] == null ? undefined : json['githubInstallationId'],
        'githubPrivateKey': json['githubPrivateKey'] == null ? undefined : json['githubPrivateKey'],
        'githubWebhookSecret': json['githubWebhookSecret'] == null ? undefined : json['githubWebhookSecret'],
        'gitProviderId': json['gitProviderId'],
        'name': json['name'],
    };
}

export function GithubUpdateRequestToJSON(json: any): GithubUpdateRequest {
    return GithubUpdateRequestToJSONTyped(json, false);
}

export function GithubUpdateRequestToJSONTyped(value?: GithubUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'githubId': value['githubId'],
        'githubAppName': value['githubAppName'],
        'githubAppId': value['githubAppId'],
        'githubClientId': value['githubClientId'],
        'githubClientSecret': value['githubClientSecret'],
        'githubInstallationId': value['githubInstallationId'],
        'githubPrivateKey': value['githubPrivateKey'],
        'githubWebhookSecret': value['githubWebhookSecret'],
        'gitProviderId': value['gitProviderId'],
        'name': value['name'],
    };
}

