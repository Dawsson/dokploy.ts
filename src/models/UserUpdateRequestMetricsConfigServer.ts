/* tslint:disable */
/* eslint-disable */
/**
 * Dokploy API
 * Endpoints for dokploy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserUpdateRequestMetricsConfigServerThresholds } from './UserUpdateRequestMetricsConfigServerThresholds';
import {
    UserUpdateRequestMetricsConfigServerThresholdsFromJSON,
    UserUpdateRequestMetricsConfigServerThresholdsFromJSONTyped,
    UserUpdateRequestMetricsConfigServerThresholdsToJSON,
    UserUpdateRequestMetricsConfigServerThresholdsToJSONTyped,
} from './UserUpdateRequestMetricsConfigServerThresholds';

/**
 * 
 * @export
 * @interface UserUpdateRequestMetricsConfigServer
 */
export interface UserUpdateRequestMetricsConfigServer {
    /**
     * 
     * @type {string}
     * @memberof UserUpdateRequestMetricsConfigServer
     */
    type: UserUpdateRequestMetricsConfigServerTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof UserUpdateRequestMetricsConfigServer
     */
    refreshRate: number;
    /**
     * 
     * @type {number}
     * @memberof UserUpdateRequestMetricsConfigServer
     */
    port: number;
    /**
     * 
     * @type {string}
     * @memberof UserUpdateRequestMetricsConfigServer
     */
    token: string;
    /**
     * 
     * @type {string}
     * @memberof UserUpdateRequestMetricsConfigServer
     */
    urlCallback: string;
    /**
     * 
     * @type {number}
     * @memberof UserUpdateRequestMetricsConfigServer
     */
    retentionDays: number;
    /**
     * 
     * @type {string}
     * @memberof UserUpdateRequestMetricsConfigServer
     */
    cronJob: string;
    /**
     * 
     * @type {UserUpdateRequestMetricsConfigServerThresholds}
     * @memberof UserUpdateRequestMetricsConfigServer
     */
    thresholds: UserUpdateRequestMetricsConfigServerThresholds;
}


/**
 * @export
 */
export const UserUpdateRequestMetricsConfigServerTypeEnum = {
    Dokploy: 'Dokploy',
    Remote: 'Remote'
} as const;
export type UserUpdateRequestMetricsConfigServerTypeEnum = typeof UserUpdateRequestMetricsConfigServerTypeEnum[keyof typeof UserUpdateRequestMetricsConfigServerTypeEnum];


/**
 * Check if a given object implements the UserUpdateRequestMetricsConfigServer interface.
 */
export function instanceOfUserUpdateRequestMetricsConfigServer(value: object): value is UserUpdateRequestMetricsConfigServer {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('refreshRate' in value) || value['refreshRate'] === undefined) return false;
    if (!('port' in value) || value['port'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('urlCallback' in value) || value['urlCallback'] === undefined) return false;
    if (!('retentionDays' in value) || value['retentionDays'] === undefined) return false;
    if (!('cronJob' in value) || value['cronJob'] === undefined) return false;
    if (!('thresholds' in value) || value['thresholds'] === undefined) return false;
    return true;
}

export function UserUpdateRequestMetricsConfigServerFromJSON(json: any): UserUpdateRequestMetricsConfigServer {
    return UserUpdateRequestMetricsConfigServerFromJSONTyped(json, false);
}

export function UserUpdateRequestMetricsConfigServerFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserUpdateRequestMetricsConfigServer {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'refreshRate': json['refreshRate'],
        'port': json['port'],
        'token': json['token'],
        'urlCallback': json['urlCallback'],
        'retentionDays': json['retentionDays'],
        'cronJob': json['cronJob'],
        'thresholds': UserUpdateRequestMetricsConfigServerThresholdsFromJSON(json['thresholds']),
    };
}

export function UserUpdateRequestMetricsConfigServerToJSON(json: any): UserUpdateRequestMetricsConfigServer {
    return UserUpdateRequestMetricsConfigServerToJSONTyped(json, false);
}

export function UserUpdateRequestMetricsConfigServerToJSONTyped(value?: UserUpdateRequestMetricsConfigServer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'refreshRate': value['refreshRate'],
        'port': value['port'],
        'token': value['token'],
        'urlCallback': value['urlCallback'],
        'retentionDays': value['retentionDays'],
        'cronJob': value['cronJob'],
        'thresholds': UserUpdateRequestMetricsConfigServerThresholdsToJSON(value['thresholds']),
    };
}

